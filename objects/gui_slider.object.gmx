<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_slider</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>gui_base</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// CHANGE SOME PROPERTIES //
width = 128;
height = sprite_height;
// SPECIFIC PROPERTIES //
maximum = 99;
value = 0;
callback = -1;
// SYSTEM //
pressed = 0;
offset = 0;
button = noone;
with(parent) {
    other.button = gui_create(other.x, other.y + other.height * 0.5, gui_sliderbutton);
}
button.slider = id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var mx = device_mouse_x_to_gui(0);
if(hover) {
    if(mouse_check_button_pressed(mb_left)) {
        pressed = 1;
        offset = 0;
    }
}
if(mouse_check_button(mb_left)) {
    if(pressed) {
        var px = gui_parent_x_get() + x;
        var last = value;
        var w = width - height;
        value = round(clamp((mx - offset) - px - height * 0.5, 0, w) / w * maximum);
        //value = round(clamp((mx - offset) - px, 0, width) / width * maximum);
        if(value != last &amp;&amp; script_exists(callback)) {
            script_execute(callback);
        }
    }
} else {
    pressed = 0;
}
gui_focus_on_click();
if(parent.children[|0] == id) {
    gui_focus(button);
}
button.x = x + height * 0.5 + value / maximum * (width - height) - button.width * 0.5;
//button.x = x + value / maximum * width - button.width * 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var sw = sprite_get_width(sprite_index);
var sh = sprite_get_height(sprite_index);
draw_sprite_part_ext(sprite_index, 0, 0, 0, sh * 0.5, sh, x, y, 1, 1, image_blend, image_alpha);
draw_sprite_part_ext(sprite_index, 0, sh * 0.5, 0, sw - sh, sh, x + sh * 0.5, y, (width - sh) / (sw - sh), 1, image_blend, image_alpha);
draw_sprite_part_ext(sprite_index, 0, sw - sh * 0.5, 0, sh * 0.5, sh, x + width - sh * 0.5, y, 1, 1, image_blend, image_alpha);
draw_sprite_part_ext(sprite_index, 1, 0, 0, sh * 0.5, sh, x, y, 1, 1, image_blend, image_alpha);
draw_sprite_part_ext(sprite_index, 1, sh * 0.5, 0, sw - sh, sh, x + sh * 0.5, y, max(0, (value / maximum * width - sh) / (sw - sh)), 1, image_blend, image_alpha);
draw_sprite_part_ext(sprite_index, 1, sw - sh * 0.5, 0, sh * 0.5, sh, x + max(sh * 0.5, value / maximum * width - sh * 0.5), y, 1, 1, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
